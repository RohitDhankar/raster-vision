self.cfg.data.plot_options.channel_display_groups
self.cfg.data.plot_options.transform
self.cfg.data.class_colors
self.cfg.data.class_names

DataConfig
    class_names: List[str] = Field([], description='Names of classes.')
    class_colors: Optional[List[Union[str, Tuple[int, int, int]]]] = Field(
        None,
        description=('Colors used to display classes. '
                        'Can be color 3-tuples in list form.'))

PlotOptions
    transform: Optional[dict] = Field(
        A.to_dict(MinMaxNormalize()),
        description='An Albumentations transform serialized as a dict that '
        'will be applied to each image before it is plotted. Mainly useful '
        'for undoing any data transformation that you do not want included in '
        'the plot, such as normalization. The default value will shift and scale the '
        'image so the values range from 0.0 to 1.0 which is the expected range for '
        'the plotting function. This default is useful for cases where the values after '
        'normalization are close to zero which makes the plot difficult to see.'
    )
    channel_display_groups: Optional[Union[Dict[str, Sequence[
        NonNegInt]], Sequence[Sequence[NonNegInt]]]] = Field(
            None,
            description=
            ('Groups of image channels to display together as a subplot '
             'when plotting the data and predictions. '
             'Can be a list or tuple of groups (e.g. [(0, 1, 2), (3,)]) or a '
             'dict containing title-to-group mappings '
             '(e.g. {"RGB": [0, 1, 2], "IR": [3]}), '
             'where each group is a list or tuple of channel indices and '
             'title is a string that will be used as the title of the subplot '
             'for that group.'))